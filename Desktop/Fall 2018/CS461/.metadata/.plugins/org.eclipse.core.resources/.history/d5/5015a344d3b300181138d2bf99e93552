package PokerSimulation.main;

public class Rank {
	private int rank;
	private int position;
	

	// Accessors & Mutators:
	
	int get_rank() 
	{
		return this.rank;
	}
	
	int get_position()
	{
		return this.position;
	}
	
	// MISC:
	
	/*- is_straight_flush():
	    - Check if is_flush(), if true, continue
	    - check if is_straight(), if true, continue
	    
	    
- is_flush():
    - Sort cards by suite
    - If lowest suite == highest suite, hand is flush.

- is_straight():
    - if (highest card == ace):
        - check if other cards are:
            K Q J 10    or
            2 3 4 5
    - else:
        - for (int i = 0; i < 8; i++) // 8 possible other combos
            if (h[i] == rank[i+1] && h[i+1] == rank[i+2])

*/
	public boolean is_straight()
	{
		
	}
	
	public boolean is_straight_flush()
	{
		return true;
	}
	
	
}
